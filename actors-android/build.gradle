buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.2'
    }
}
apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/groups/public/" }
}

group = 'com.droidkit'
version = '0.6.0'

android {
    compileSdkVersion 20
    buildToolsVersion "20.0.0"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 20
    }

    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    lintOptions {
        abortOnError false
    }
}

// Android JavaDocs
android.libraryVariants.all { variant ->
    task("${variant.name}Javadoc", type: Javadoc) {
        destinationDir = new File("$project.buildDir/javadoc/$variant.name")

        source = variant.javaCompile.source
        exclude '**/BuildConfig.java'
        exclude '**/R.java'

        if (android.plugin.hasProperty("sdkHandler")) {
            androidPath = "${android.plugin.sdkHandler.sdkFolder}"
        } else {
            androidPath = "${android.plugin.sdkDirectory}"
        }

        ext.androidJar = "${androidPath}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
    }

    task("${variant.name}JavadocJar", type: Jar, dependsOn: "${variant.name}Javadoc") {
        classifier 'javadoc'
        destinationDir = new File("$project.buildDir/libs/")
        from "$project.buildDir/javadoc/$variant.name"
    }

    task("${variant.name}SourcesJar", type: Jar) {
        classifier 'sources'

        destinationDir = new File("$project.buildDir/libs/")

        from variant.javaCompile.source
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}

project.afterEvaluate {
    artifacts {
        archives releaseJavadocJar
        archives releaseSourcesJar
    }

    if (project.hasProperty("ossrhUsername") && project.hasProperty("ossrhPassword")) {

        signing {
            sign configurations.archives
        }

        uploadArchives {
            repositories {
                mavenDeployer {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                        authentication(userName: ossrhUsername, password: ossrhPassword)
                    }

                    pom.project {
                        name 'DroidKit Actors: Android'
                        packaging 'aar'
                        description 'DroidKit Actors: Android is extension for DroidKit Actors'
                        url 'https://github.com/actorapp/droidkit-actors'

                        scm {
                            url 'scm:git@github.com:actorapp/droidkit-actors.git'
                            connection 'scm:git@github.com:actorapp/droidkit-actors.git'
                            developerConnection 'scm:git@github.com:actorapp/droidkit-actors.git'
                        }

                        licenses {
                            license {
                                name 'The MIT License (MIT)'
                                url 'http://opensource.org/licenses/MIT'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id 'ex3ndr'
                                name 'Stepan Korshakov'
                            }
                        }
                    }
                }
            }
        }
    }
}

dependencies {
    compile 'com.droidkit:actors:0.6.0'
}